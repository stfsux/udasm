/* file generated with avrtomap.py */

CODE:
{
  interrupts = 
  (
    ( "RESET", 0x000, 0x02, "code" ),
    ( "INT0", 0x001, 0x02, "code" ),
    ( "PCINT0", 0x002, 0x02, "code" ),
    ( "PCINT1", 0x003, 0x02, "code" ),
    ( "TIM0_CAPT", 0x004, 0x02, "code" ),
    ( "TIM0_OVF", 0x005, 0x02, "code" ),
    ( "TIM0_COMPA", 0x006, 0x02, "code" ),
    ( "TIM0_COMPB", 0x007, 0x02, "code" ),
    ( "ANA_COMP", 0x008, 0x02, "code" ),
    ( "WDT", 0x009, 0x02, "code" ),
    ( "VLM", 0x00A, 0x02, "code" ),
    ( "ADC", 0x00B, 0x02, "code" ),
    ( "USART0_RXS", 0x00C, 0x02, "code" ),
    ( "USART0_RXC", 0x00D, 0x02, "code" ),
    ( "USART0_DRE", 0x00E, 0x02, "code" ),
    ( "USART0_TXC", 0x00F, 0x02, "code" )
  );
}

IDATA:
{
  registers = 
  (
    ( "PINA", 0x00 ),
    ( "DDRA", 0x01 ),
    ( "PORTA", 0x02 ),
    ( "PUEA", 0x03 ),
    ( "PINB", 0x04 ),
    ( "DDRB", 0x05 ),
    ( "PORTB", 0x06 ),
    ( "PUEB", 0x07 ),
    ( "UDR0", 0x08 ),
    ( "UBRR0L", 0x09 ),
    ( "UBRR0H", 0x0A ),
    ( "UCSR0D", 0x0B ),
    ( "UCSR0C", 0x0C ),
    ( "UCSR0B", 0x0D ),
    ( "UCSR0A", 0x0E ),
    ( "PCMSK0", 0x0F ),
    ( "PCMSK1", 0x10 ),
    ( "PCIFR", 0x11 ),
    ( "PCICR", 0x12 ),
    ( "EIMSK", 0x13 ),
    ( "EIFR", 0x14 ),
    ( "EICRA", 0x15 ),
    ( "PORTCR", 0x16 ),
    ( "DIDR0", 0x17 ),
    ( "7", 0x19 ),
    ( "15", 0x1A ),
    ( "ADMUX", 0x1B ),
    ( "ADCSRB", 0x1C ),
    ( "ADCSRA", 0x1D ),
    ( "ACSRB", 0x1E ),
    ( "ACSRA", 0x1F ),
    ( "7", 0x22 ),
    ( "15", 0x23 ),
    ( "OCR0BL", 0x24 ),
    ( "OCR0BH", 0x25 ),
    ( "OCR0AL", 0x26 ),
    ( "OCR0AH", 0x27 ),
    ( "TCNT0L", 0x28 ),
    ( "TCNT0H", 0x29 ),
    ( "TIFR0", 0x2A ),
    ( "TIMSK0", 0x2B ),
    ( "TCCR0C", 0x2C ),
    ( "TCCR0B", 0x2D ),
    ( "TCCR0A", 0x2E ),
    ( "GTCCR", 0x2F ),
    ( "WDTCSR", 0x31 ),
    ( "NVMCSR", 0x32 ),
    ( "NVMCMD", 0x33 ),
    ( "VLMCSR", 0x34 ),
    ( "PRR", 0x35 ),
    ( "CLKPSR", 0x36 ),
    ( "CLKMSR", 0x37 ),
    ( "OSCCAL", 0x39 ),
    ( "SMCR", 0x3A ),
    ( "RSTFLR", 0x3B ),
    ( "CCP", 0x3C ),
    ( "7", 0x3D ),
    ( "15", 0x3E ),
    ( "SREG", 0x5F )
  );
}

